name: Node CI

on: 
  push:
    branches:    
      - master         # Push events on master branch

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x]

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: npm install, build, and test
      run: |
        npm install
        npm run build --if-present
        npm test
      env:
        CI: true
    - name: deploy
      uses: fernandreu/ssh-action@master
      env:
        PRIVATE_KEY: ${{ secrets.RPI_PRIVATE_KEY }}
        HOST: ${{ secrets.RPI_HOST }}
        USER: pi
        PORT: ${{ secrets.RPI_PORT }}
      with:
        args: |
          # Variables needed for this:
          folder=$PWD/web-console
          nodeCache="${folder}/node_modules"
          ref="$GITHUB_SHA"
          serviceName=web-console
          newLine="ExecStart=npm run --prefix ${refPath} start"
          if [ -z "$newLine" ]; then
            echo "Wrong newLine; aborting"
            exit 1
          fi
          
          # Download code being built
          echo Downloading source code
          refPath="${folder}/${ref}"
          rm -rf $refPath # Remove folder if it exists 
          mkdir $refPath
          cd $refPath
          git clone https://github.com/fernandreu/web-console .
          git checkout $ref
          cp ${folder}/server.crt ./server/server.crt
          cp ${folder}/server.key ./server/server.key

          # Build it
          echo Building the source code
          mkdir -p $nodeCache  # Ensure node cache folder exists...
          # ln -s $nodeCache node_modules  # ... and symlink it
          npm install
          npm run build
          if [ $? -ne 0 ]; then
            echo "Build failed; aborting deployment"
            rm -rf $refPath
            exit 1
          fi

          # Get the current deployment path from the service
          serviceFile="/etc/systemd/system/${serviceName}.service"
          line=$(sed -n -e '/^ExecStart=/p' $serviceFile)
          previousPath=$(echo $line | awk '{print $(NF-1) }')
          echo Previous source code detected in: $previousPath

          # Replace that path with the new one
          echo New line is: $newLine
          escaped=$(sed -e 's/[\/&]/\\&/g' <<< $newLine)
          echo Escaped: $escaped
          sudo sed -i "/ExecStart=/c\\${escaped}" $serviceFile

          # Restart service
          echo Restarting service
          sudo systemctl restart $serviceName

          # Delete previous source code
          echo Deleting previous source code in: $previousPath
          sudo rm -rf $previousPath
